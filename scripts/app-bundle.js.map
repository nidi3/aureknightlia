{"version":3,"sources":["highscore.ts","app.ts","environment.ts","main.ts","numeric-format.ts","resources/index.ts","/Users/nidi/idea/aureknightlia/src/app.html","/Users/nidi/idea/aureknightlia/src/style.css"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class Highscore {\n  private high: number;\n\n  constructor() {\n    this.high = +(localStorage.getItem('highscore') || 0);\n  }\n\n  update(score: number) {\n    if (score > this.high) {\n      this.high = score;\n      localStorage.setItem('highscore', '' + score);\n    }\n    return this.high;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {Highscore} from './highscore';\n\n@inject(Highscore)\nexport class App {\n  boardSize = 8;\n  moves: number;\n  knight: {x: number,y: number};\n  visited: {};\n  high: number;\n  message: string;\n\n  constructor(private highscore: Highscore) {\n    this.init();\n  }\n\n  init() {\n    this.message = 'Good Luck!';\n    this.moves = 0;\n    this.visited = {};\n    for (let x = 0; x < this.boardSize; x++) {\n      this.visited[x] = {};\n      for (let y = 0; y < this.boardSize; y++) {\n        this.visited[x][y] = false;\n      }\n    }\n    let x = Math.floor(Math.random() * this.boardSize);\n    let y = Math.floor(Math.random() * this.boardSize);\n    this.set(x, y);\n  }\n\n  set(x: number, y: number) {\n    this.knight = {x: x, y: y};\n    this.visit(x, y, true);\n    this.moves++;\n    this.high = this.highscore.update(this.moves);\n  }\n\n  sizeChanged(){\n    this.init();\n  }\n\n  private visit(x, y, visited) {\n    this.visited[x][y] = visited;\n  }\n\n  isVisited(x: number, y: number) {\n    return this.visited[x][y];\n  }\n\n  moveTo(x: number, y: number) {\n    this.message = '';\n    if (this.visited[x][y]) {\n      return;\n    }\n    let dx = Math.abs(x - this.knight.x);\n    let dy = Math.abs(y - this.knight.y);\n    if ((dx == 1 || dx == 2) && dx + dy == 3) {\n      this.set(x, y);\n    }\n    if (this.validMoves() === 0) {\n      this.message = (this.moves === this.boardSize * this.boardSize ? 'Congratulations!' : 'Game over!');\n    }\n  }\n\n  validMoves() {\n    return this.validMove(2, 1) + this.validMove(1, 2) + this.validMove(-2, 1) + this.validMove(-1, 2) +\n      this.validMove(2, -1) + this.validMove(1, -2) + this.validMove(-2, -1) + this.validMove(-1, -2);\n  }\n\n\n  hint() {\n    let instance = this;\n    var min = 10;\n    var bestDx, bestDy;\n    test(2, 1);\n    test(1, 2);\n    test(-2, 1);\n    test(-1, 2);\n    test(2, -1);\n    test(1, -2);\n    test(-2, -1);\n    test(-1, -2);\n\n    this.moveTo(this.knight.x + bestDx, this.knight.y + bestDy);\n\n    function test(dx, dy) {\n      let pa = instance.validMovesAfter(dx, dy);\n      if (pa === 0) {\n        pa = 9;\n      }\n      if (pa > 0 && pa < min) {\n        min = pa;\n        bestDx = dx;\n        bestDy = dy;\n      }\n    }\n\n  }\n\n  validMovesAfter(dx, dy) {\n    if (this.validMove(dx, dy) === 0) {\n      return -1;\n    }\n    this.knight = {x: this.knight.x + dx, y: this.knight.y + dy};\n    this.visit(this.knight.x, this.knight.y, true);\n    let result = this.validMoves();\n    this.visit(this.knight.x, this.knight.y, false);\n    this.knight = {x: this.knight.x - dx, y: this.knight.y - dy};\n    return result;\n  }\n\n\n  validMove(dx, dy): number {\n    let x = this.knight.x + dx;\n    let y = this.knight.y + dy;\n    return (x >= 0 && x < this.boardSize && y >= 0 && y < this.boardSize && !this.isVisited(x, y)) ? 1 : 0;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NumericFormatValueConverter {\n  fromView(value) {\n    let p = parseInt(value);\n    return p >= 4 && p <= 12 ? p : 8;\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"../src"}